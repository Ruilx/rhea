# -*- coding: utf-8 -*-

__project__ = 'rhea'
__version_tuple__ = (0, 1, 0)
__version__ = '.'.join(map(lambda x: str(x), __version_tuple__))
__author__ = 'Ruilx'

__desc__ = 'A FastAPI ASGI web framework'
__slogan__ = 'Embark from \'Rhea\', unleash infinite creations!'

import asyncio
import sys
import numpy
from typing import Callable, IO, AnyStr

from src.framework.dry.assets.ani_helper import slow_print_to_io
from src.framework.dry.common.tool.event_loop import EventLoop

RENDERED = \
    "\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x38\x34\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x38" \
    "\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x38\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x38\x34\x6d\x38\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x32\x31\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x31\x34\x6d\x38\x1b\x5b\x33\x38\x3b" \
    "\x35\x3b\x32\x31\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x31\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x31" \
    "\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x31\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x6f\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x2e\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x20\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b" \
    "\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x20\x20\x20\x20\x20\x20\x20\x20\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38" \
    "\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31" \
    "\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38" \
    "\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x1b\x5b\x33\x38" \
    "\x3b\x35\x3b\x31\x36\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31" \
    "\x36\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x20\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b" \
    "\x35\x3b\x31\x32\x39\x6d\x2e\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33" \
    "\x6d\x2e\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x38\x34" \
    "\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x38\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x31\x34\x6d\x38\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x32\x31\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x31\x34\x6d\x38\x20\x20\x20\x20\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x60\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x1b\x5b\x33\x38\x3b" \
    "\x35\x3b\x32\x30\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x2e\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b" \
    "\x32\x30\x33\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33" \
    "\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x20\x20" \
    "\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39" \
    "\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x1b\x5b\x33" \
    "\x38\x3b\x35\x3b\x31\x32\x39\x6d\x2e\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x39" \
    "\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x2e\x20\x20\x20" \
    "\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x38\x34\x6d\x38\x20\x1b\x5b\x33" \
    "\x38\x3b\x35\x3b\x32\x31\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x31\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b" \
    "\x32\x31\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x31\x34\x6d\x38\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35" \
    "\x3b\x32\x30\x38\x6d\x60\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38" \
    "\x6d\x38\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d" \
    "\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33" \
    "\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x20\x20\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d" \
    "\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b" \
    "\x33\x38\x3b\x35\x3b\x31\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x20\x20\x20\x20\x20\x20" \
    "\x20\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x3a\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d" \
    "\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b" \
    "\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x2e" \
    "\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x31\x34\x6d\x38\x20\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x32\x31\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x31\x34\x6d\x38\x1b\x5b\x33\x38\x3b" \
    "\x35\x3b\x32\x31\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x20\x20\x20\x20\x20\x1b\x5b\x33\x38" \
    "\x3b\x35\x3b\x32\x30\x38\x6d\x2e\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32" \
    "\x30\x33\x6d\x38\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30" \
    "\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x38\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x38\x20\x20\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39" \
    "\x39\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38" \
    "\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x20\x20\x20\x20" \
    "\x20\x20\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x2e\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33" \
    "\x6d\x2e\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x60\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38" \
    "\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d" \
    "\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x2e\x20\x20\x20\x20\x20" \
    "\x20\x0a\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x31\x34\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b" \
    "\x32\x31\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d" \
    "\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x2e\x20\x20\x20" \
    "\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x2e\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38" \
    "\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x27\x20\x20\x1b\x5b\x33\x38\x3b\x35" \
    "\x3b\x32\x30\x33\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39" \
    "\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x38\x20" \
    "\x20\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x33\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31" \
    "\x36\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38" \
    "\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x1b\x5b\x33\x38" \
    "\x3b\x35\x3b\x31\x36\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31" \
    "\x32\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x39\x6d\x38" \
    "\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x39\x6d\x38\x20\x20\x20\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x2e\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b" \
    "\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x2e\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x60\x1b\x5b" \
    "\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36" \
    "\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33" \
    "\x38\x3b\x35\x3b\x36\x33\x6d\x2e\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32" \
    "\x31\x34\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d" \
    "\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x1b\x5b\x33" \
    "\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b" \
    "\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d" \
    "\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x50\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x27\x20\x20\x20" \
    "\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x38\x1b\x5b\x33" \
    "\x38\x3b\x35\x3b\x31\x39\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b" \
    "\x31\x39\x38\x6d\x38\x20\x20\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x20\x1b\x5b" \
    "\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35" \
    "\x3b\x31\x36\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20" \
    "\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x2e\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35" \
    "\x3b\x39\x33\x6d\x27\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x60\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x2e\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x60\x1b\x5b\x33\x38\x3b\x35\x3b" \
    "\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b" \
    "\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33" \
    "\x33\x6d\x2e\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x20\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x1b\x5b\x33\x38\x3b" \
    "\x35\x3b\x32\x30\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30" \
    "\x33\x6d\x60\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x62\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x2e\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d" \
    "\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x38\x1b\x5b" \
    "\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35" \
    "\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39" \
    "\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x33\x6d\x38\x1b\x5b" \
    "\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35" \
    "\x3b\x31\x36\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36" \
    "\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x38\x6d\x38\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x31\x32\x39\x6d\x38\x20\x20\x20\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x39" \
    "\x33\x6d\x2e\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x27\x20\x20\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x60\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b" \
    "\x36\x33\x6d\x2e\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x60\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b" \
    "\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33" \
    "\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x33\x6d\x2e\x20\x20\x20" \
    "\x0a\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32" \
    "\x30\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38" \
    "\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x60\x1b\x5b" \
    "\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x62\x1b\x5b\x33\x38\x3b\x35" \
    "\x3b\x32\x30\x33\x6d\x2e\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x38\x20\x1b\x5b\x33\x38\x3b" \
    "\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39" \
    "\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x20\x20\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b" \
    "\x35\x3b\x31\x36\x34\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x38\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31" \
    "\x32\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x39\x6d\x38" \
    "\x20\x20\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x2e\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33" \
    "\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x27\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x60" \
    "\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x2e\x1b\x5b\x33\x38\x3b\x35" \
    "\x3b\x33\x33\x6d\x60\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x33\x6d\x38\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x33\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b" \
    "\x33\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x39\x6d\x2e\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38" \
    "\x3b\x35\x3b\x32\x30\x38\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b" \
    "\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d" \
    "\x38\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x60\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d" \
    "\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x62\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x2e\x20\x20\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38" \
    "\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31" \
    "\x39\x39\x6d\x38\x20\x20\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x38\x6d\x38\x20\x1b\x5b\x33" \
    "\x38\x3b\x35\x3b\x31\x32\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b" \
    "\x31\x32\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x39\x6d\x38\x20\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38" \
    "\x3b\x35\x3b\x39\x33\x6d\x2e\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d" \
    "\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b" \
    "\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38" \
    "\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35" \
    "\x3b\x33\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x33\x6d\x2e\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x33\x6d\x60\x1b" \
    "\x5b\x33\x38\x3b\x35\x3b\x33\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b" \
    "\x33\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x39\x6d\x38\x1b\x5b" \
    "\x33\x38\x3b\x35\x3b\x33\x39\x6d\x2e\x20\x0a\x20\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d" \
    "\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b" \
    "\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x32\x30\x33\x6d\x38\x20\x20\x20\x20\x20\x20" \
    "\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x60\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x38\x6d\x38\x1b\x5b\x33\x38" \
    "\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31" \
    "\x39\x39\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x39\x39\x6d" \
    "\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x36\x34\x6d\x38\x20\x20\x20" \
    "\x20\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x39\x6d\x38\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x39" \
    "\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x31\x32\x39\x6d\x38\x1b\x5b" \
    "\x33\x38\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x39" \
    "\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33" \
    "\x38\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x39\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33" \
    "\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x36\x33\x6d\x27\x20\x20\x20\x20" \
    "\x20\x20\x20\x20\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x33\x6d\x60\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x33\x6d\x38\x1b\x5b" \
    "\x33\x38\x3b\x35\x3b\x33\x33\x6d\x2e\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x39\x6d\x60\x1b\x5b\x33\x38\x3b\x35\x3b\x33" \
    "\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x39\x6d\x38\x1b\x5b\x33" \
    "\x38\x3b\x35\x3b\x33\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x39\x6d\x38\x1b\x5b\x33\x38\x3b\x35\x3b\x33\x38" \
    "\x6d\x2e\x1b\x5b\x30\x6d"

BR = [
    "\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x38\x38\x38\x38\x38\x6f\x2e\x20\x20\x20\x38"
    "\x20\x38\x38\x38\x38\x20\x20\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x38\x38\x38\x38"
    "\x38\x38\x38\x38\x20\x20\x20\x20\x20\x20\x20\x2e\x38\x2e\x20\x20\x20\x20\x20\x20\x20\x20\x20",
    "\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x20\x20\x20\x20\x60\x38\x38\x2e\x20\x20\x38"
    "\x20\x38\x38\x38\x38\x20\x20\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x20\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x2e\x38\x38\x38\x2e\x20\x20\x20\x20\x20\x20\x20\x20",
    "\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x20\x20\x20\x20\x20\x60\x38\x38\x20\x20\x38"
    "\x20\x38\x38\x38\x38\x20\x20\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x20\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x3a\x38\x38\x38\x38\x38\x2e\x20\x20\x20\x20\x20\x20\x20",
    "\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x20\x20\x20\x20\x20\x2e\x38\x38\x20\x20\x38"
    "\x20\x38\x38\x38\x38\x20\x20\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x20\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x20\x20\x2e\x2e\x60\x38\x38\x38\x38\x38\x2e\x20\x20\x20\x20\x20\x20",
    "\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x2e\x20\x20\x20\x2e\x38\x38\x27\x20\x20\x38"
    "\x20\x38\x38\x38\x38\x20\x20\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x38\x38\x38\x38"
    "\x38\x38\x38\x38\x20\x20\x20\x2e\x38\x38\x2e\x60\x38\x38\x38\x38\x38\x2e\x20\x20\x20\x20\x20",
    "\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x38\x38\x38\x38\x38\x50\x27\x20\x20\x20\x38"
    "\x20\x38\x38\x38\x38\x20\x20\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x20\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x2e\x38\x27\x60\x38\x2e\x60\x38\x38\x38\x38\x38\x2e\x20\x20\x20\x20",
    "\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x60\x38\x62\x2e\x20\x20\x20\x20\x20\x20\x38"
    "\x20\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x20\x38\x38\x38\x38\x20\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x2e\x38\x27\x20\x20\x60\x38\x2e\x60\x38\x38\x38\x38\x38\x2e\x20\x20\x20",
    "\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x20\x20\x60\x38\x62\x2e\x20\x20\x20\x20\x38"
    "\x20\x38\x38\x38\x38\x20\x20\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x20\x20\x20\x20"
    "\x20\x20\x20\x20\x2e\x38\x27\x20\x20\x20\x20\x60\x38\x2e\x60\x38\x38\x38\x38\x38\x2e\x20\x20",
    "\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x20\x20\x20\x20\x60\x38\x62\x2e\x20\x20\x38"
    "\x20\x38\x38\x38\x38\x20\x20\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x20\x20\x20\x20"
    "\x20\x20\x20\x2e\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x2e\x60\x38\x38\x38\x38\x38\x2e\x20",
    "\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x20\x20\x20\x20\x20\x20\x60\x38\x38\x38\x38"
    "\x20\x38\x38\x38\x38\x20\x20\x20\x20\x20\x20\x20\x20\x38\x20\x38\x38\x38\x38\x38\x38\x38\x38"
    "\x38\x38\x38\x38\x27\x20\x20\x20\x20\x20\x20\x20\x20\x60\x38\x2e\x60\x38\x38\x38\x38\x38\x2e",
]

ESCS = [
    ['', '', '', '', '', '', '[38;5;184', '', '[38;5;184', '[38;5;184', '[38;5;184', '[38;5;214', '[38;5;214',
     '[38;5;214', '[38;5;214', '[38;5;214', '[38;5;214', '[38;5;208', '[38;5;208', '', '', '', '[38;5;208', '',
     '[38;5;203', '[38;5;203', '[38;5;203', '[38;5;203', '', '', '', '', '', '', '', '', '[38;5;198', '', '[38;5;199',
     '[38;5;199', '[38;5;199', '[38;5;199', '[38;5;199', '[38;5;199', '[38;5;163', '[38;5;164', '[38;5;164',
     '[38;5;164', '[38;5;164', '[38;5;164', '', '', '', '', '', '', '', '[38;5;129', '[38;5;129', '[38;5;93', '', '',
     '', '', '', '', '', '', ''],
    ['', '', '', '', '', '', '[38;5;184', '', '[38;5;184', '[38;5;214', '[38;5;214', '[38;5;214', '', '', '', '',
     '[38;5;208', '[38;5;208', '[38;5;208', '[38;5;208', '', '', '[38;5;203', '', '[38;5;203', '[38;5;203', '[38;5;203',
     '[38;5;203', '', '', '', '', '', '', '', '', '[38;5;199', '', '[38;5;199', '[38;5;199', '[38;5;199', '[38;5;199',
     '', '', '', '', '', '', '', '', '', '', '', '', '', '', '[38;5;129', '[38;5;93', '[38;5;93', '[38;5;93',
     '[38;5;93', '', '', '', '', '', '', '', ''],
    ['', '', '', '', '', '', '[38;5;184', '', '[38;5;214', '[38;5;214', '[38;5;214', '[38;5;214', '', '', '', '', '',
     '[38;5;208', '[38;5;208', '[38;5;208', '', '', '[38;5;203', '', '[38;5;203', '[38;5;203', '[38;5;203', '[38;5;203',
     '', '', '', '', '', '', '', '', '[38;5;199', '', '[38;5;199', '[38;5;199', '[38;5;163', '[38;5;164', '', '', '',
     '', '', '', '', '', '', '', '', '', '', '[38;5;93', '[38;5;93', '[38;5;93', '[38;5;93', '[38;5;93', '[38;5;93',
     '[38;5;93', '', '', '', '', '', '', ''],
    ['', '', '', '', '', '', '[38;5;214', '', '[38;5;214', '[38;5;214', '[38;5;214', '[38;5;208', '', '', '', '', '',
     '[38;5;208', '[38;5;203', '[38;5;203', '', '', '[38;5;203', '', '[38;5;203', '[38;5;203', '[38;5;198', '[38;5;198',
     '', '', '', '', '', '', '', '', '[38;5;199', '', '[38;5;163', '[38;5;164', '[38;5;164', '[38;5;164', '', '', '',
     '', '', '', '', '', '', '', '', '', '[38;5;93', '[38;5;93', '[38;5;93', '[38;5;93', '[38;5;93', '[38;5;93',
     '[38;5;63', '[38;5;63', '[38;5;63', '', '', '', '', '', ''],
    ['', '', '', '', '', '', '[38;5;214', '', '[38;5;214', '[38;5;208', '[38;5;208', '[38;5;208', '[38;5;208', '', '',
     '', '[38;5;203', '[38;5;203', '[38;5;203', '[38;5;203', '', '', '[38;5;203', '', '[38;5;198', '[38;5;198',
     '[38;5;198', '[38;5;198', '', '', '', '', '', '', '', '', '[38;5;163', '', '[38;5;164', '[38;5;164', '[38;5;164',
     '[38;5;164', '[38;5;164', '[38;5;164', '[38;5;128', '[38;5;129', '[38;5;129', '[38;5;129', '[38;5;129',
     '[38;5;129', '', '', '', '[38;5;93', '[38;5;93', '[38;5;93', '[38;5;93', '[38;5;93', '[38;5;63', '[38;5;63',
     '[38;5;63', '[38;5;63', '[38;5;63', '[38;5;63', '', '', '', '', ''],
    ['', '', '', '', '', '', '[38;5;214', '', '[38;5;208', '[38;5;208', '[38;5;208', '[38;5;208', '[38;5;208',
     '[38;5;208', '[38;5;203', '[38;5;203', '[38;5;203', '[38;5;203', '[38;5;203', '', '', '', '[38;5;198', '',
     '[38;5;198', '[38;5;198', '[38;5;198', '[38;5;198', '', '', '', '', '', '', '', '', '[38;5;164', '', '[38;5;164',
     '[38;5;164', '[38;5;164', '[38;5;164', '', '', '', '', '', '', '', '', '', '', '[38;5;93', '[38;5;93', '[38;5;93',
     '[38;5;93', '[38;5;63', '[38;5;63', '[38;5;63', '[38;5;63', '[38;5;63', '[38;5;63', '[38;5;63', '[38;5;63',
     '[38;5;33', '', '', '', ''],
    ['', '', '', '', '', '', '[38;5;208', '', '[38;5;208', '[38;5;208', '[38;5;208', '[38;5;208', '[38;5;203',
     '[38;5;203', '[38;5;203', '[38;5;203', '', '', '', '', '', '', '[38;5;198', '', '[38;5;198', '[38;5;198',
     '[38;5;199', '[38;5;199', '[38;5;199', '[38;5;199', '[38;5;199', '[38;5;199', '[38;5;163', '[38;5;164',
     '[38;5;164', '[38;5;164', '[38;5;164', '', '[38;5;164', '[38;5;164', '[38;5;128', '[38;5;129', '', '', '', '', '',
     '', '', '', '', '[38;5;93', '[38;5;93', '[38;5;93', '', '', '[38;5;63', '[38;5;63', '[38;5;63', '[38;5;63',
     '[38;5;63', '[38;5;63', '[38;5;33', '[38;5;33', '[38;5;33', '[38;5;33', '', '', ''],
    ['', '', '', '', '', '', '[38;5;208', '', '[38;5;208', '[38;5;208', '[38;5;203', '[38;5;203', '', '', '[38;5;203',
     '[38;5;203', '[38;5;203', '[38;5;203', '', '', '', '', '[38;5;198', '', '[38;5;199', '[38;5;199', '[38;5;199',
     '[38;5;199', '', '', '', '', '', '', '', '', '[38;5;164', '', '[38;5;128', '[38;5;129', '[38;5;129', '[38;5;129',
     '', '', '', '', '', '', '', '', '[38;5;93', '[38;5;93', '[38;5;63', '', '', '', '', '[38;5;63', '[38;5;63',
     '[38;5;63', '[38;5;33', '[38;5;33', '[38;5;33', '[38;5;33', '[38;5;33', '[38;5;33', '[38;5;39', '', ''],
    ['', '', '', '', '', '', '[38;5;208', '', '[38;5;203', '[38;5;203', '[38;5;203', '[38;5;203', '', '', '', '',
     '[38;5;198', '[38;5;198', '[38;5;198', '[38;5;198', '', '', '[38;5;199', '', '[38;5;199', '[38;5;199', '[38;5;199',
     '[38;5;199', '', '', '', '', '', '', '', '', '[38;5;128', '', '[38;5;129', '[38;5;129', '[38;5;129', '[38;5;129',
     '', '', '', '', '', '', '', '[38;5;93', '[38;5;63', '[38;5;63', '[38;5;63', '[38;5;63', '[38;5;63', '[38;5;63',
     '[38;5;63', '[38;5;63', '[38;5;33', '[38;5;33', '[38;5;33', '[38;5;33', '[38;5;33', '[38;5;33', '[38;5;39',
     '[38;5;39', '[38;5;39', '[38;5;39', ''],
    ['', '', '', '', '', '', '[38;5;203', '', '[38;5;203', '[38;5;203', '[38;5;203', '[38;5;203', '', '', '', '', '',
     '', '[38;5;198', '[38;5;198', '[38;5;199', '[38;5;199', '[38;5;199', '', '[38;5;199', '[38;5;199', '[38;5;163',
     '[38;5;164', '', '', '', '', '', '', '', '', '[38;5;129', '', '[38;5;129', '[38;5;129', '[38;5;129', '[38;5;93',
     '[38;5;93', '[38;5;93', '[38;5;93', '[38;5;93', '[38;5;93', '[38;5;93', '[38;5;63', '[38;5;63', '[38;5;63', '', '',
     '', '', '', '', '', '', '[38;5;33', '[38;5;33', '[38;5;33', '[38;5;39', '[38;5;39', '[38;5;39', '[38;5;39',
     '[38;5;39', '[38;5;39', '[38;5;38'],
]


class Banner(object):
    @staticmethod
    def f1(x: float):
        return (-9 / 28) * x + (88 / 7)

    @staticmethod
    def f2(x: float):
        return (-10 / 41) * x + (630 / 41)

    @staticmethod
    def f(b: float, x: float):
        return 0.125 * x + b

    @staticmethod
    def b(x: float, y: float):
        return y - 0.125 * x

    def cur_sav(self):
        print('\033[s', end='', file=self._io)

    def cur_res(self):
        print('\033[u', end='', file=self._io)

    def cur_mvup(self, lines: int):
        print(f'\033[{lines}A', end='', file=self._io, flush=True)

    def cur_mvcol(self, col_pos: int):
        print(f'\033[{col_pos}G', end='', file=self._io, flush=True)

    @staticmethod
    def delta(distance: float, duration: float, freq: int = 25):
        return distance / (duration * freq)

    def __init__(self, io: IO | None = None):
        self._loop = EventLoop()
        self._io = io
        self._f = 25
        self._b = (
            [10, Banner.b(39, 0), 0.3],
            [Banner.b(63, 0), Banner.b(8, 10), 0.4],
            [Banner.b(22, 10), Banner.b(80, 0), 0.3],
        )
        for b in self._b:
            b[2] = Banner.delta(b[1] - b[0], b[2], self._f)
        self._d = (7, 4, 1)
        self._x = [39, 63, 8, 22]
        self._y = [0, 0, 10, 10]
        self._delay = 1 / self._f
        self._s = True

    def getchar(self, x: int, y: int, color: bool):
        c = BR[x][y]
        if not color:
            return c
        if c == ' ':
            return c
        return f"\033{ESCS[x][y]}m{c}\033[0m"

    def set_events(self):
        c = 0
        for stage in range(3):
            for b in numpy.arange(*self._b[stage]):
                self._loop.call_later(self._delay * c, self.p_update, stage, b)
                c += 1
            self._loop.call_later(self._delay * c, self.p_update, stage, self._b[stage][1])
            c += self._d[stage]
        self._loop.call_later(self._delay * c, self._loop.stop)

    def update(self, stage: int, b: float):
        t = []
        match stage:
            case 0:
                for x in range(BR.__len__()):
                    for y in range(BR[x].__len__()):
                        t.append(self.getchar(x, y, Banner.f1(y) >= x >= Banner.f(b, y)))
                    t.append('\n')
            case 1:
                for x in range(BR.__len__()):
                    for y in range(BR[x].__len__()):
                        if x <= Banner.f1(y):
                            t.append(self.getchar(x, y, True))
                        elif x <= Banner.f2(y) and x <= Banner.f(b, y):
                            t.append(self.getchar(x, y, True))
                        else:
                            t.append(self.getchar(x, y, False))
                    t.append('\n')
            case 2:
                for x in range(BR.__len__()):
                    for y in range(BR[x].__len__()):
                        if x <= Banner.f2(y):
                            t.append(self.getchar(x, y, True))
                        else:
                            t.append(self.getchar(x, y, x > Banner.f(b, y)))
                    t.append('\n')
            case _:
                raise RuntimeError("stage only support 0, 1 and 2")
        return ''.join(t)

    def p_update(self, stage: int, b: float):
        if not self._s:
            self.cur_res()
        else:
            self._s = False
        self.cur_sav()
        print(''.join(self.update(stage, b)), end='', file=self._io, flush=True)

    def _setup_screen(self):
        print('\n' * BR.__len__(), end='', file=self._io, flush=True)
        self.cur_mvcol(0)
        self.cur_mvup(BR.__len__())

    def run(self):
        self.set_events()
        self._s = True
        self._setup_screen()
        self._loop.exec()


class About(object):
    BannerShown = False

    @staticmethod
    def name():
        return __project__

    @staticmethod
    def version():
        return __version__

    @staticmethod
    def version_tuple():
        return __version_tuple__

    @staticmethod
    def author():
        return __author__

    @staticmethod
    def _desc_str(color=True):
        return ' ' * max(75 - __desc__.__len__() - (2 if color else 0), 0) + \
            ('\x1b\x5b\x33\x30\x3b\x31\x30\x37\x3b\x31\x3b\x35\x6d\x20' if color else '') + __desc__ + (
                '\x20\x1b\x5b\x30\x6d' if color else '')

    @staticmethod
    def _banner_str(logger_function: Callable[[AnyStr], None]):
        if sys.stdout.isatty() and logger_function == print:
            return RENDERED
        elif sys.stderr.isatty() and logger_function == print:
            return RENDERED
        else:
            # BUG: I want to show the effect for print color banner into tty but plain text in other cases (eg. file)
            # But I cannot get any output settings here, I don't know which output stream is used.
            return '\x0A' + RENDERED

    @staticmethod
    def banner_to_io(o: IO, force_color=False):
        if o.isatty():
            Banner(o).run()
            asyncio.run(slow_print_to_io(About._desc_str(), io=o))
        else:
            o.write(RENDERED if force_color else '\n'.join(BR))
            o.write('\n')
            o.write(About._desc_str(color=force_color))
            o.write('\n')

    @staticmethod
    def log_banner(logger_function: Callable[[str], None]):
        if About.BannerShown:
            return
        logger_function(f"{About._banner_str(logger_function)}\x0a{About._desc_str()}")
        About.BannerShown = True
